{"name":"Filesaver.js","tagline":"An HTML5 saveAs() FileSaver implementation","body":"FileSaver.js\r\n============\r\n\r\nFileSaver.js implements the HTML5 W3C `saveAs()` FileSaver interface in browsers that do\r\nnot natively support it. There is a [FileSaver.js demo][1] that demonstrates saving\r\nvarious media types.\r\n\r\nFileSaver.js is the solution to saving files on the client-side, and is perfect for\r\nwebapps that need to generate files, or for saving sensitive information that shouldn't be\r\nsent to an external server.\r\n\r\nLooking for `canvas.toBlob()` for saving canvases? Check out\r\n[canvas-toBlob.js](https://github.com/eligrey/canvas-toBlob.js) for a cross-browser implementation.\r\n\r\nSupported Browsers\r\n------------------\r\n\r\n| Browser        | Constructs as | Filenames    | Max Blob Size | Dependencies |\r\n| -------------- | ------------- | ------------ | ------------- | ------------ |\r\n| Firefox 20+    | Blob          | Yes          | 800 MiB       | None         |\r\n| Firefox < 20   | data: URI     | No           | n/a           | [Blob.js](https://github.com/eligrey/Blob.js) |\r\n| Chrome         | Blob          | Yes          | 345 MiB       | None         |\r\n| Chrome for Android | Blob      | Yes          | ?             | None         |\r\n| IE 10+         | Blob          | Yes          | 600 MiB       | None         |\r\n| Opera 15+      | Blob          | Yes          | 345 MiB       | None         |\r\n| Opera < 15     | data: URI     | No           | n/a           | [Blob.js](https://github.com/eligrey/Blob.js) |\r\n| Safari 6.1+*   | Blob          | No           | ?             | None         |\r\n| Safari < 6     | data: URI     | No           | n/a           | [Blob.js](https://github.com/eligrey/Blob.js) |\r\n\r\nFeature detection is possible:\r\n\r\n```js\r\ntry {\r\n    var isFileSaverSupported = !!new Blob;\r\n} catch (e) {}\r\n```\r\n\r\n### IE < 10\r\n\r\nIt is possible to save HTML documents (and only HTML documents) in IE < 10 without Flash-based\r\npolyfills. See [sudodoki's comment](https://github.com/eligrey/FileSaver.js/issues/56#issuecomment-30917476)\r\nfor more information on how to accomplish this.\r\n\r\n### Safari 6.1+\r\n\r\nBlobs may be opened instead of saved sometimes—you may have to direct your Safari users to manually\r\npress <kbd>⌘</kbd>+<kbd>S</kbd> to save the file after it is opened. Using the `application/octet-stream` MIME type to force downloads [can cause issues in Safari](https://github.com/eligrey/FileSaver.js/issues/12#issuecomment-47247096).\r\n\r\nSyntax\r\n------\r\n\r\n```js\r\nFileSaver saveAs(in Blob data, in DOMString filename)\r\n```\r\n\r\nExamples\r\n--------\r\n\r\n### Saving text\r\n\r\n```js\r\nvar blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\r\nsaveAs(blob, \"hello world.txt\");\r\n```\r\n\r\nThe standard W3C File API [`Blob`][3] interface is not available in all browsers.\r\n[Blob.js][4] is a cross-browser `Blob` implementation that solves this.\r\n\r\n### Saving a canvas\r\n\r\n```js\r\nvar canvas = document.getElementById(\"my-canvas\"), ctx = canvas.getContext(\"2d\");\r\n// draw to canvas...\r\ncanvas.toBlob(function(blob) {\r\n    saveAs(blob, \"pretty image.png\");\r\n});\r\n```\r\n\r\nNote: The standard HTML5 `canvas.toBlob()` method is not available in all browsers.\r\n[canvas-toBlob.js][5] is a cross-browser `canvas.toBlob()` that polyfills this.\r\n\r\n\r\n![Tracking image](https://in.getclicky.com/212712ns.gif)\r\n\r\n  [1]: http://eligrey.com/demos/FileSaver.js/\r\n  [3]: https://developer.mozilla.org/en-US/docs/DOM/Blob\r\n  [4]: https://github.com/eligrey/Blob.js\r\n  [5]: https://github.com/eligrey/canvas-toBlob.js\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}